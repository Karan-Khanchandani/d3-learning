{"version":3,"sources":["../src/index.js"],"names":["d3","width","height","svg","select","append","attr","plotMargins","top","bottom","left","right","plotGroup","classed","plotWidth","plotHeight","xScale","scaleTime","range","xAxis","axisBottom","xAxisGroup","call","yScale","scaleLinear","yAxis","axisLeft","yAxisGroup","pointsGroup","json","error","data","console","log","prepared","children","map","date","Date","d","created","score","domain","extent","nice","dataBound","selectAll","exit","remove","enterSelection","enter","merge","i","style"],"mappings":"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","file":"index.js","sourcesContent":["import * as d3 from 'd3';\n\nconst width = 960;\nconst height = 480;\n\nlet svg = d3.select('body')\n    .append('svg')\n    .attr('width', width)\n    .attr('height', height);\n\nlet plotMargins = {\n    top: 30,\n    bottom: 30,\n    left: 150,\n    right: 30\n};\n\nlet plotGroup = svg.append('g')\n    .classed('plot', true)\n    .attr('transform', `translate(${plotMargins.left}, ${plotMargins.top})`);\n\nlet plotWidth = width - plotMargins.left - plotMargins.right;\nlet plotHeight = height - plotMargins.top - plotMargins.bottom;\n\nlet xScale = d3.scaleTime()\n    .range([0, plotWidth]);\nlet xAxis = d3.axisBottom(xScale);\n\nlet xAxisGroup = plotGroup.append('g')\n    .classed('x', true)\n    .classed('axis', true)\n    .attr('transform', `translate(${0}, ${plotHeight})`)\n    .call(xAxis);\n\nlet yScale = d3.scaleLinear()\n    .range([plotHeight, 0]);\nlet yAxis = d3.axisLeft(yScale);\nlet yAxisGroup = plotGroup.append('g')\n    .classed('y', true)\n    .classed('axis', true)\n    .call(yAxis);\n\nlet pointsGroup = plotGroup.append('g')\n    .classed('points', true);\n\n\nd3.json('https://api.reddit.com', (error, data) => {\n    if (error) {\n        console.log(error);\n    }\n    if (data) {\n        console.log(data);\n    }\n});\n\nlet prepared = data.data.children.map(d => {\n    return {\n        date: new Date(d.data.created * 1000),\n        score: d.data.score\n    }\n});\nconsole.log(prepared);\n\nxScale.domain(d3.extent(prepared, d => d.date))\n    .nice();\nxAxisGroup.call(xAxis);\n\nyScale.domain(d3.extent(prepared, d => d.score))\n    .nice();\nyAxisGroup.call(yAxis);\n\nvar dataBound = pointsGroup.selectAll('.post')\n    .data(prepared);\n\ndataBound.exit()\n    .remove();\n\nvar enterSelection = dataBound.enter()\n    .append('g')\n    .classed('post', true);\n\nenterSelection.merge(dataBound)\n    .attr('transform', (d, i) => `translate(${xScale(d.date)},${yScale(d.score)})`);\n\n\nenterSelection.append('circle')\n    .attr('r', 2)\n    .style('fill', 'red');"]}